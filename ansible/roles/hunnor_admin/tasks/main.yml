- apt:
    name: python3-docker
    state: present
  become: yes

- user:
    append: yes
    groups: docker
    name: "{{hunnor_user_name}}"
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/mysql"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/mysql/config"
    state: directory
  become: yes

- template:
    dest: "{{hunnor_directory_apps}}/mysql/config/mysql.env"
    group: "{{hunnor_user_name}}"
    owner: "{{hunnor_user_name}}"
    src: mysql.env.j2
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/mysql/config"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: sql-mode.cnf
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/mysql/data"
    state: directory
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/mysql/data"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: grant.file.sql
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/mysql/data"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: hunnor.v2.create.sql
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/mysql/data"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: hunnor.v3.create.sql
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/mysql/data"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: ordbank.create.sql
  become: yes

- copy:
    dest: "{{hunnor_directory_data}}"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: ordbank.import.sql
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-rails"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-rails/config"
    state: directory
  become: yes

- template:
    dest: "{{hunnor_directory_apps}}/admin-rails/config/admin.env"
    group: "{{hunnor_user_name}}"
    owner: "{{hunnor_user_name}}"
    src: admin.env.j2
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-rails/logs"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-rails/tmp"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-spring"
    state: directory
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-spring/config"
    state: directory
  become: yes

- copy:
    dest: "{{hunnor_directory_apps}}/admin-spring/config"
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    src: logback.xml
  become: yes

- template:
    dest: "{{hunnor_directory_apps}}/admin-spring/config/application.properties"
    group: "{{hunnor_user_name}}"
    owner: "{{hunnor_user_name}}"
    src: application.properties.j2
  become: yes

- file:
    group: "{{hunnor_user_group}}"
    owner: "{{hunnor_user_name}}"
    path: "{{hunnor_directory_apps}}/admin-spring/logs"
    state: directory
  become: yes

- docker_container:
    env:
      TZ: Europe/Oslo
    env_file: "{{hunnor_directory_apps}}/mysql/config/mysql.env"
    image: mysql:5.7
    name: mysql
    published_ports:
      - 3306:3306
    restart_policy: always
    volumes:
      - "{{hunnor_directory_apps}}/mysql/config:/etc/mysql/conf.d"
      - "{{hunnor_directory_apps}}/mysql/data:/docker-entrypoint-initdb.d"
      - "{{hunnor_directory_data}}:/data"
      - mysql-data:/var/lib/mysql
  become: yes
  become_user: "{{hunnor_user_name}}"

- docker_container:
    env:
      TZ: Europe/Oslo
    image: adminer
    links: mysql:db
    name: adminer
    published_ports:
      - 8082:8080
    restart_policy: always
  become: yes
  become_user: "{{hunnor_user_name}}"

- docker_container:
    env_file: "{{hunnor_directory_apps}}/admin-rails/config/admin.env"
    env:
      TZ: Europe/Oslo
    image: hunnordict/admin-rails
    name: admin-rails
    published_ports:
      - 3000:3000
    restart_policy: always
    user: "{{hunnor_user_id}}:{{hunnor_user_group_id}}"
    volumes:
      - "{{hunnor_directory_data}}:/data"
      - "{{hunnor_directory_apps}}/admin-rails/logs:/opt/hunnor-dict/admin-rails/log"
      - "{{hunnor_directory_apps}}/admin-rails/tmp:/opt/hunnor-dict/admin-rails/tmp"
  become: yes
  become_user: "{{hunnor_user_name}}"

- docker_container:
    command: "--spring.config.location=classpath:/application.properties,/config/application.properties"
    env:
      TZ: Europe/Oslo
    image: hunnordict/admin-spring
    name: admin-spring
    published_ports:
      - 8083:8080
    restart_policy: always
    user: "{{hunnor_user_id}}:{{hunnor_user_group_id}}"
    volumes:
      - "{{hunnor_directory_apps}}/admin-spring/config:/config"
      - "{{hunnor_directory_apps}}/admin-spring/logs:/logs"
  become: yes
  become_user: "{{hunnor_user_name}}"

- docker_network:
    connected:
      - mysql
      - admin-rails
      - admin-spring
    name: mysql-net
  become: yes
  become_user: "{{hunnor_user_name}}"

- docker_network:
    appends: yes
    connected:
      - admin-rails
    name: solr-net
  become: yes
  become_user: "{{hunnor_user_name}}"

- template:
    dest: "/home/{{hunnor_user_name}}/docker-update-mysql.sh"
    group: "{{hunnor_user_name}}"
    mode: u=rwx,g=rx,o=rx
    owner: "{{hunnor_user_name}}"
    src: docker-update-mysql.sh.j2
  become: yes

- template:
    dest: "/home/{{hunnor_user_name}}/docker-update-admin-rails.sh"
    group: "{{hunnor_user_name}}"
    mode: u=rwx,g=rx,o=rx
    owner: "{{hunnor_user_name}}"
    src: docker-update-admin-rails.sh.j2
  become: yes

- template:
    dest: "/home/{{hunnor_user_name}}/docker-update-admin-spring.sh"
    group: "{{hunnor_user_name}}"
    mode: u=rwx,g=rx,o=rx
    owner: "{{hunnor_user_name}}"
    src: docker-update-admin-spring.sh.j2
  become: yes

- template:
    dest: "/home/{{hunnor_user_name}}/docker-update-adminer.sh"
    group: "{{hunnor_user_name}}"
    mode: u=rwx,g=rx,o=rx
    owner: "{{hunnor_user_name}}"
    src: docker-update-adminer.sh.j2
  become: yes

- template:
    dest: /home/{{hunnor_user_name}}/my.cnf
    group: "{{hunnor_user_name}}"
    mode: 0600
    owner: "{{hunnor_user_name}}"
    src: my.cnf.j2
  become: yes

- command: docker cp /home/{{hunnor_user_name}}/my.cnf mysql:/root/.my.cnf
  become: yes
  become_user: "{{hunnor_user_name}}"

- file:
    path: /home/{{hunnor_user_name}}/my.cnf
    state: absent
  become: yes
  become_user: "{{hunnor_user_name}}"
